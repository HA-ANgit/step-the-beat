{"ast":null,"code":"var _jsxFileName = \"/Users/hannespro/Documents/Pro/step-the-beat/src/Drum_Machine.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport Kick1 from './808_kit/Kick.wav';\nimport Snare1 from './808_kit/Clap.wav';\nimport Clap1 from './808_kit/Snare.wav';\nimport HHC1 from './808_kit/HH_Closed.wav';\nimport HHO1 from './808_kit/HH_Open.wav';\nimport Perc1 from './808_kit/Perc.wav';\nimport Kick2 from './Pop_kit/Kick.wav';\nimport Snare2 from './Pop_kit/Clap.wav';\nimport Clap2 from './Pop_kit/Snare.wav';\nimport HHC2 from './Pop_kit/HH_Closed.wav';\nimport HHO2 from './Pop_kit/HH_Open.wav';\nimport Perc2 from './Pop_kit/Perc.wav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst kit808 = [{\n  keyCode: 81,\n  key: 'Q',\n  id: '808-BD',\n  url: Kick1\n}, {\n  keyCode: 87,\n  key: 'W',\n  id: '808-SN',\n  url: Snare1\n}, {\n  keyCode: 69,\n  key: 'E',\n  id: '808-CL',\n  url: Clap1\n}, {\n  keyCode: 65,\n  key: 'A',\n  id: '808-HHC',\n  url: HHC1\n}, {\n  keyCode: 83,\n  key: 'S',\n  id: '808-HHO',\n  url: HHO1\n}, {\n  keyCode: 68,\n  key: 'D',\n  id: '808-PRC',\n  url: Perc1\n}];\nconst popKit = [{\n  keyCode: 81,\n  key: 'Q',\n  id: 'Pop-BD',\n  url: Kick2\n}, {\n  keyCode: 87,\n  key: 'W',\n  id: 'Pop-SN',\n  url: Snare2\n}, {\n  keyCode: 69,\n  key: 'E',\n  id: 'Pop-CL',\n  url: Clap2\n}, {\n  keyCode: 65,\n  key: 'A',\n  id: 'Pop-HHC',\n  url: HHC2\n}, {\n  keyCode: 83,\n  key: 'S',\n  id: 'Pop-HHO',\n  url: HHO2\n}, {\n  keyCode: 68,\n  key: 'D',\n  id: 'Pop-PRC',\n  url: Perc2\n}];\nconst soundsName = {\n  kit1: \"808 Kit\",\n  kit2: \"Pop Kit\"\n};\nconst soundsGroup = {\n  kit1: kit808,\n  kit2: popKit\n};\n\nconst Triggers = _ref => {\n  _s();\n\n  let {\n    play,\n    sample: {\n      id,\n      key,\n      url,\n      keyCode\n    }\n  } = _ref;\n\n  const handleKeydown = event => {\n    if (keyCode === event.keyCode) {\n      play(key, id);\n    }\n  };\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeydown);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    value: \"test\",\n    id: keyCode,\n    className: \"drum-pad\",\n    onClick: () => play(key, id),\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      className: \"clip\",\n      id: key,\n      src: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), key]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Triggers, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Triggers;\n\nconst Keyboard = _ref2 => {\n  let {\n    play,\n    kits\n  } = _ref2;\n  return kits.map(sample => /*#__PURE__*/_jsxDEV(Triggers, {\n    play: play,\n    sample: sample\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 33\n  }, this));\n};\n\n_c2 = Keyboard;\n\nconst DrumController = _ref3 => {\n  let {\n    changeKit\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kitController\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeKit,\n      children: \"Change Drum Kit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = DrumController;\n\nconst Drum_Machine = () => {\n  _s2();\n\n  const [kitType, setKitType] = React.useState(\"808 Kit\"); //Detta är vårt startkit\n\n  const [kits, setKit] = React.useState(soundsGroup[kitType]);\n\n  const play = key => {\n    const audio = document.getElementById(key);\n    audio.currentTime = 0;\n    audio.play();\n  };\n\n  const changeKit = () => {\n    if (kitType === \"808 Kit\") {\n      setKitType(\"Pop Kit\");\n      console.log(\"Changing to Pop-Kit\");\n      setKit(soundsGroup.kit1);\n    } else {\n      setKitType(\"808 Kit\");\n      console.log(\"Changing to 808-Kit\");\n      setKit(soundsGroup.kit2);\n    }\n  }; //Problem dår \"kits\"-variabeln inte vill vara dynamisk på rad 157, just nu hårdkodar jag in kit808 eller PopKit för att byta ljud\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"drum_machine\",\n    children: [/*#__PURE__*/_jsxDEV(Keyboard, {\n      play: play,\n      kits: kit808\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DrumController, {\n      changeKit: setKit,\n      name: setKit || soundsName[setKitType]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(Drum_Machine, \"YYXYvZ7MPhmL3xVrx9MSLfmwKgA=\");\n\n_c4 = Drum_Machine;\nexport default Drum_Machine; //ReactDOM.render(<Drum_Machine />, document.getElementById(\"app\"));\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Triggers\");\n$RefreshReg$(_c2, \"Keyboard\");\n$RefreshReg$(_c3, \"DrumController\");\n$RefreshReg$(_c4, \"Drum_Machine\");","map":{"version":3,"sources":["/Users/hannespro/Documents/Pro/step-the-beat/src/Drum_Machine.js"],"names":["React","Kick1","Snare1","Clap1","HHC1","HHO1","Perc1","Kick2","Snare2","Clap2","HHC2","HHO2","Perc2","kit808","keyCode","key","id","url","popKit","soundsName","kit1","kit2","soundsGroup","Triggers","play","sample","handleKeydown","event","useEffect","document","addEventListener","Keyboard","kits","map","DrumController","changeKit","Drum_Machine","kitType","setKitType","useState","setKit","audio","getElementById","currentTime","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Kick1 from './808_kit/Kick.wav';\nimport Snare1 from './808_kit/Clap.wav';\nimport Clap1 from './808_kit/Snare.wav';\nimport HHC1 from './808_kit/HH_Closed.wav';\nimport HHO1 from './808_kit/HH_Open.wav';\nimport Perc1 from './808_kit/Perc.wav';\nimport Kick2 from './Pop_kit/Kick.wav';\nimport Snare2 from './Pop_kit/Clap.wav';\nimport Clap2 from './Pop_kit/Snare.wav';\nimport HHC2 from './Pop_kit/HH_Closed.wav';\nimport HHO2 from './Pop_kit/HH_Open.wav';\nimport Perc2 from './Pop_kit/Perc.wav';\n\n\nconst kit808 = [\n    {\n        keyCode: 81,\n        key: 'Q',\n        id: '808-BD',\n        url: Kick1\n    },\n    {\n        keyCode: 87,\n        key: 'W',\n        id: '808-SN',\n        url: Snare1\n    },\n    {\n        keyCode: 69,\n        key: 'E',\n        id: '808-CL',\n        url: Clap1\n    },\n    {\n        keyCode: 65,\n        key: 'A',\n        id: '808-HHC',\n        url: HHC1\n    },\n    {\n        keyCode: 83,\n        key: 'S',\n        id: '808-HHO',\n        url: HHO1\n    },\n    {\n        keyCode: 68,\n        key: 'D',\n        id: '808-PRC',\n        url: Perc1\n    }\n];\n\nconst popKit = [\n    {\n        keyCode: 81,\n        key: 'Q',\n        id: 'Pop-BD',\n        url: Kick2\n    },\n    {\n        keyCode: 87,\n        key: 'W',\n        id: 'Pop-SN',\n        url: Snare2\n    },\n    {\n        keyCode: 69,\n        key: 'E',\n        id: 'Pop-CL',\n        url: Clap2\n    },\n    {\n        keyCode: 65,\n        key: 'A',\n        id: 'Pop-HHC',\n        url: HHC2\n    },\n    {\n        keyCode: 83,\n        key: 'S',\n        id: 'Pop-HHO',\n        url: HHO2\n    },\n    {\n        keyCode: 68,\n        key: 'D',\n        id: 'Pop-PRC',\n        url: Perc2\n    }\n];\n\nconst soundsName = {\n    kit1: \"808 Kit\",\n    kit2: \"Pop Kit\"\n};\n\nconst soundsGroup = {\n    kit1: kit808,\n    kit2: popKit\n}\n\nconst Triggers = ({ play, sample: { id, key, url, keyCode } }) => {\n\n    const handleKeydown = (event) => {\n        if(keyCode === event.keyCode){\n            play(key, id);\n        }\n    }\n\n    React.useEffect(() => {\n        document.addEventListener(\"keydown\", handleKeydown)\n    }, [])\n\n    return (\n        <button value=\"test\" id={keyCode} className=\"drum-pad\" onClick={() => play(key, id)}> \n            <audio className=\"clip\" id={key} src={url} />\n            {key}\n        </button>\n    );\n}\n \nconst Keyboard = ({ play, kits }) => {\n    return kits.map((sample) => <Triggers play={play} sample={sample} />)\n}\n\nconst DrumController = ({ changeKit }) => (\n    <div className=\"kitController\">\n        <button onClick={changeKit}>Change Drum Kit</button>\n    </div>\n)\n\nconst Drum_Machine = () => {\n    const [kitType, setKitType] = React.useState(\"808 Kit\"); //Detta är vårt startkit\n    const [kits, setKit] = React.useState(soundsGroup[kitType])\n\n    const play = (key) => {\n        const audio = document.getElementById(key)\n        audio.currentTime = 0;\n        audio.play()\n    }\n\n    const changeKit = () => {\n        if(kitType === \"808 Kit\"){\n            setKitType(\"Pop Kit\")\n            console.log(\"Changing to Pop-Kit\")\n            setKit(soundsGroup.kit1)\n        } else {\n            setKitType(\"808 Kit\")\n            console.log(\"Changing to 808-Kit\")\n            setKit(soundsGroup.kit2)\n        }\n    }\n//Problem dår \"kits\"-variabeln inte vill vara dynamisk på rad 157, just nu hårdkodar jag in kit808 eller PopKit för att byta ljud\n    return <div id=\"drum_machine\"> \n        <Keyboard play={play} kits={kit808} /> \n        <DrumController changeKit={setKit} name={setKit || soundsName[setKitType]} />\n    </div>\n}\n\nexport default Drum_Machine;\n\n//ReactDOM.render(<Drum_Machine />, document.getElementById(\"app\"));\n"]},"metadata":{},"sourceType":"module"}