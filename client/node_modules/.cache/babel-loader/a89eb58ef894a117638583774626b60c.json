{"ast":null,"code":"var _jsxFileName = \"/Users/hannespro/Documents/Pro/step-the-beat/src/components/tempos.jsx\";\nimport React, { Component } from 'react';\nimport Counter from './counter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Tempos extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    //Lifecyckle hook Update\n    if (prevProps.tempos.value !== this.props.tempos.value) {//Detta är smart när vi vill uppdatera vårt state med ny data från servern, men inte vill skicka onödiga http requests.\n    }\n  }\n\n  componentWillUnmount() {\n    console.log(\"Tempos - unmount\");\n  }\n\n  render() {\n    console.log(\"Tempos - rendered\");\n    const {\n      onReset,\n      onDelete,\n      onStepClick,\n      tempos\n    } = this.props; //Destructing arguments\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onReset,\n        style: {\n          color: 'orange'\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CURRENT STATE VALUES\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this), tempos.map(tempo => /*#__PURE__*/_jsxDEV(Counter, {\n        onDelete: onDelete,\n        onStepClick: onStepClick,\n        tempo: tempo,\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Title: \", tempo.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, tempo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 35\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Tempos;","map":{"version":3,"sources":["/Users/hannespro/Documents/Pro/step-the-beat/src/components/tempos.jsx"],"names":["React","Component","Counter","Tempos","componentDidUpdate","prevProps","prevState","tempos","value","props","componentWillUnmount","console","log","render","onReset","onDelete","onStepClick","color","map","tempo","title","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAC3BG,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AAAI;AACxC,QAAGD,SAAS,CAACE,MAAV,CAAiBC,KAAjB,KAA2B,KAAKC,KAAL,CAAWF,MAAX,CAAkBC,KAAhD,EAAuD,CACnD;AACH;AACJ;;AAEDE,EAAAA,oBAAoB,GAAE;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AAEJ,UAAM;AAAEE,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,WAArB;AAAkCT,MAAAA;AAAlC,QAA6C,KAAKE,KAAxD,CAHS,CAGuD;;AAE5D,wBACA;AAAA,8BACK;AAAQ,QAAA,OAAO,EAAEK,OAAjB;AAA0B,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAG;AAAT,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL,EAGMV,MAAM,CAACW,GAAP,CAAWC,KAAK,iBAAI,QAAC,OAAD;AAAwB,QAAA,QAAQ,EAAEJ,QAAlC;AAA4C,QAAA,WAAW,EAAEC,WAAzD;AAAsE,QAAA,KAAK,EAAEG,KAA7E;AAAA,+BAClB;AAAA,gCAAYA,KAAK,CAACC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADkB,SAAcD,KAAK,CAACE,EAApB;AAAA;AAAA;AAAA;AAAA,cAApB,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAQH;;AAxB0B;;AA2B/B,eAAelB,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Counter from './counter';\n\nclass Tempos extends Component {\n    componentDidUpdate(prevProps, prevState){   //Lifecyckle hook Update\n        if(prevProps.tempos.value !== this.props.tempos.value) {\n            //Detta är smart när vi vill uppdatera vårt state med ny data från servern, men inte vill skicka onödiga http requests.\n        }\n    }\n\n    componentWillUnmount(){\n        console.log(\"Tempos - unmount\");\n    }\n\n    render() { \n        console.log(\"Tempos - rendered\");\n\n    const { onReset, onDelete, onStepClick, tempos } = this.props;  //Destructing arguments\n\n        return (\n        <div>\n             <button onClick={onReset} style={{color : 'orange'}}>Reset</button>\n             <h2>CURRENT STATE VALUES</h2>\n            { tempos.map(tempo => <Counter key={tempo.id} onDelete={onDelete} onStepClick={onStepClick} tempo={tempo} >\n                <h4>Title: {tempo.title}</h4> \n            </Counter>)}    \n        </div>);\n    }\n}\n \nexport default Tempos;"]},"metadata":{},"sourceType":"module"}