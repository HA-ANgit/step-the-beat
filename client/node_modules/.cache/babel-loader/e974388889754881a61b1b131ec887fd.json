{"ast":null,"code":"var _jsxFileName = \"/Users/hannespro/Documents/Pro/step-the-beat/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      playing: false,\n      bpm: this.props.value,\n      //bpm, tidigare vårt count-värde\n      beatsPerMeasure: 4,\n      imageUrl: \"https://picsum.photos/200\"\n    };\n\n    this.stepClick = product => {\n      console.log(product);\n      this.setState({\n        bpm: this.state.bpm + 1\n      });\n    };\n  }\n\n  //Insert Timer här, som kan delas med nuvarande klick / minut\n  render() {\n    console.log('props', this.props); //Monitor för värdet på samtliga props i console loggen\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [this.props.children, /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontSize: 30,\n          color: 'green'\n        },\n        className: \"bpm_low fade_volume\",\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.stepClick(this.stepClick.product),\n        children: \"stepClick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleReset,\n        style: {\n          color: 'red'\n        },\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: this.state.imageUrl,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this);\n  }\n\n  formatCount() {\n    const {\n      bpm\n    } = this.state;\n    return bpm <= 40 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: 30,\n        color: 'red'\n      },\n      children: \"fade volume\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 28\n    }, this) : bpm; //Snygg if-sats. Vi kan även retunera en plain text eller en funktion här!\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/hannespro/Documents/Pro/step-the-beat/src/components/counter.jsx"],"names":["React","Component","Counter","state","playing","bpm","props","value","beatsPerMeasure","imageUrl","stepClick","product","console","log","setState","render","children","fontSize","color","formatCount","handleReset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAGA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAE5BE,KAF4B,GAEpB;AACJC,MAAAA,OAAO,EAAG,KADN;AAEJC,MAAAA,GAAG,EAAG,KAAKC,KAAL,CAAWC,KAFb;AAEoB;AACxBC,MAAAA,eAAe,EAAE,CAHb;AAIJC,MAAAA,QAAQ,EAAE;AAJN,KAFoB;;AAAA,SAc5BC,SAd4B,GAchBC,OAAO,IAAI;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,WAAKG,QAAL,CAAc;AAAET,QAAAA,GAAG,EAAG,KAAKF,KAAL,CAAWE,GAAX,GAAgB;AAAxB,OAAd;AACH,KAjB2B;AAAA;;AAoBhC;AAEIU,EAAAA,MAAM,GAAG;AACLH,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqB,KAAKP,KAA1B,EADK,CAC6B;;AAElC,wBACA,QAAC,KAAD,CAAO,QAAP;AAAA,iBACK,KAAKA,KAAL,CAAWU,QADhB,eAEI;AAAM,QAAA,KAAK,EAAG;AAAEC,UAAAA,QAAQ,EAAG,EAAb;AAAiBC,UAAAA,KAAK,EAAG;AAAzB,SAAd;AAAmD,QAAA,SAAS,EAAC,qBAA7D;AAAA,kBACK,KAAKC,WAAL;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKT,SAAL,CAAe,KAAKA,SAAL,CAAeC,OAA9B,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAQ,QAAA,OAAO,EAAE,KAAKS,WAAtB;AAAmC,QAAA,KAAK,EAAE;AAACF,UAAAA,KAAK,EAAG;AAAT,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAK,QAAA,GAAG,EAAE,KAAKf,KAAL,CAAWM,QAArB;AAA+B,QAAA,GAAG,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAWH;;AAEDU,EAAAA,WAAW,GAAE;AACT,UAAM;AAAEd,MAAAA;AAAF,QAAU,KAAKF,KAArB;AACA,WAAOE,GAAG,IAAI,EAAP,gBAAY;AAAG,MAAA,KAAK,EAAG;AAAEY,QAAAA,QAAQ,EAAG,EAAb;AAAiBC,QAAAA,KAAK,EAAG;AAAzB,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,GAA4Eb,GAAnF,CAFS,CAE+E;AAC3F;;AAzC2B;;AA4ChC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Counter extends Component {\n\n    state = {\n        playing : false,\n        bpm : this.props.value, //bpm, tidigare vårt count-värde\n        beatsPerMeasure: 4, \n        imageUrl: \"https://picsum.photos/200\"\n    }\n\n/*     constructor() {\n        super();\n        this.stepClick = this.stepClick.bind(this); //Detta reffererar nu till det tidigare sättet att \"låsa upp\" statet från vår parent Component\n    } */\n\n    stepClick = product => {\n        console.log(product);\n        this.setState({ bpm : this.state.bpm +1 });\n    };\n\n\n//Insert Timer här, som kan delas med nuvarande klick / minut\n\n    render() { \n        console.log('props', this.props); //Monitor för värdet på samtliga props i console loggen\n\n        return (\n        <React.Fragment>\n            {this.props.children}\n            <span style={ { fontSize : 30, color : 'green' } } className=\"bpm_low fade_volume\">\n                {this.formatCount()}\n            </span>\n            <button onClick={() => this.stepClick(this.stepClick.product)}>stepClick</button>\n            <button onClick={this.handleReset} style={{color : 'red'}}>Restart</button>\n            <img src={this.state.imageUrl} alt=\"\" />\n        </React.Fragment>\n        );\n    }\n\n    formatCount(){\n        const { bpm } = this.state;\n        return bpm <= 40 ? <p style={ { fontSize : 30, color : 'red' } }>fade volume</p> : bpm; //Snygg if-sats. Vi kan även retunera en plain text eller en funktion här!\n    }\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}