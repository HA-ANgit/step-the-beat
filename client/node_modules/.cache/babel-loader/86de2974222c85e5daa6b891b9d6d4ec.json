{"ast":null,"code":"var _jsxFileName = \"/Users/hannespro/Documents/Pro/step-the-beat/src/App.js\";\nimport React, { useState } from 'react';\nimport { Component } from 'react';\nimport './App.css'; //components\n\nimport NavBar from './components/navbar.jsx';\nimport Footer from './components/footer';\nimport DrumMachine from './drumMachine';\nimport Metronome from './Metronome';\nimport Tempos from './components/tempos'; //Detta är min root component!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  state = {\n    tempos: [{\n      id: 1,\n      bpm: 60,\n      title: 'minute'\n    }, {\n      id: 2,\n      bpm: 85,\n      title: 'current bpm'\n    }, {\n      id: 3,\n      bpm: 110,\n      title: 'accelerated bpm'\n    }, {\n      id: 4,\n      bpm: 128,\n      title: 'target bpm'\n    }]\n  };\n\n  handleClick = tempo => {\n    const tempos = [...this.state.tempos]; //Detta är ReactHack no1 som klonar och uppdaterar min state array\n\n    const index = tempos.indexOf(tempo); //Detta definierar vilket object i vår array som har skickats in i metoden\n\n    tempos[index] = { ...tempo\n    }; //Här kopierar vi värdet i definierad index från tempo\n\n    tempos[index].bpm++; //Här ökar vi värdet på vald prop, i detta fallet ++ på bpm\n\n    this.setState({\n      tempos\n    }); //Här uppdaterar vi vårt state och byter ut till den nya arrayen\n\n    console.log(this.state.tempos[index]);\n  };\n\n  handleReset = () => {\n    const tempos = this.state.tempos.map(c => {\n      c.bpm = 0;\n      c.resetClicked = true;\n      return c;\n    });\n    this.setState({\n      tempos\n    });\n  };\n\n  handleDelete = tempoId => {\n    //Min metod som handerar en reset av ett state\n    console.log(\"event handler called\", tempoId);\n    const currentTempos = this.state.tempos.filter(c => c.id !== tempoId); //Går igenom hela vår array och kollar vilket ID som inte stämmer\n\n    this.setState({\n      tempos: currentTempos\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"I am Drum Machine [\\u2510\\u2235]\\u2518\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"En tempo-baserad trummaskin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DrumMachine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Metronome, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tempos, {\n        tempos: this.state.tempos,\n        onReset: this.handleReset,\n        onStepClick: this.handleClick,\n        onDelete: this.handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hannespro/Documents/Pro/step-the-beat/src/App.js"],"names":["React","useState","Component","NavBar","Footer","DrumMachine","Metronome","Tempos","App","state","tempos","id","bpm","title","handleClick","tempo","index","indexOf","setState","console","log","handleReset","map","c","resetClicked","handleDelete","tempoId","currentTempos","filter"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Component } from 'react';\nimport './App.css';\n\n//components\nimport NavBar from './components/navbar.jsx';\nimport Footer from './components/footer';\nimport DrumMachine from './drumMachine';\nimport Metronome from './Metronome';\nimport Tempos from './components/tempos';\n\n//Detta är min root component!\nfunction App() {\n\n  state = { \n    tempos : \n    [\n        { id: 1, bpm: 60, title: 'minute'},\n        { id: 2, bpm: 85, title: 'current bpm'},\n        { id: 3, bpm: 110, title: 'accelerated bpm'},\n        { id: 4, bpm: 128, title: 'target bpm'},\n    ] \n};\n\nhandleClick = (tempo) => {\n    const tempos = [...this.state.tempos]; //Detta är ReactHack no1 som klonar och uppdaterar min state array\n    const index = tempos.indexOf(tempo); //Detta definierar vilket object i vår array som har skickats in i metoden\n    tempos[index] = {...tempo}; //Här kopierar vi värdet i definierad index från tempo\n    tempos[index].bpm++;    //Här ökar vi värdet på vald prop, i detta fallet ++ på bpm\n    this.setState({ tempos }); //Här uppdaterar vi vårt state och byter ut till den nya arrayen\n    console.log(this.state.tempos[index]);\n};\n\nhandleReset = () => {\n    const tempos = this.state.tempos.map( c =>{\n        c.bpm = 0;\n        c.resetClicked = true;\n        return c;\n    });\n    this.setState({ tempos });\n};\n\nhandleDelete = (tempoId) => { //Min metod som handerar en reset av ett state\n    console.log(\"event handler called\", tempoId);\n    const currentTempos = this.state.tempos.filter(c => c.id !== tempoId); //Går igenom hela vår array och kollar vilket ID som inte stämmer\n    this.setState({ tempos : currentTempos });\n};\n\n  return (\n    <React.Fragment>\n      <header className=\"App-header\">\n        <NavBar/>\n      </header>\n      <main className='container'>\n      <h1 className=\"app-title\">I am Drum Machine [┐∵]┘</h1>\n          <p>\n            En tempo-baserad trummaskin\n          </p>\n            <DrumMachine/>\n            <Metronome/>\n            <Tempos tempos={this.state.tempos} onReset={this.handleReset} onStepClick={this.handleClick} onDelete={this.handleDelete}/>\n      </main>\n      <Footer/>\n    </React.Fragment>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}