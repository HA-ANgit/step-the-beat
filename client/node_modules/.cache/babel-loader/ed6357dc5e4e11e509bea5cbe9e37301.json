{"ast":null,"code":"var _jsxFileName = \"/Users/hannespro/Documents/Pro/step-the-beat/src/App.js\";\nimport React, { useState } from 'react';\nimport { Component } from 'react';\nimport './App.css'; //components\n\nimport NavBar from './components/navbar.jsx';\nimport Footer from './components/footer';\nimport DrumMachine from './drumMachine';\nimport Metronome from './Metronome';\nimport Tempos from './components/tempos'; //Detta är min root component!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      tempos: [{\n        id: 1,\n        bpm: 60,\n        title: 'minute'\n      }, {\n        id: 2,\n        bpm: 85,\n        title: 'current bpm'\n      }, {\n        id: 3,\n        bpm: 110,\n        title: 'accelerated bpm'\n      }, {\n        id: 4,\n        bpm: 128,\n        title: 'target bpm'\n      }]\n    };\n\n    this.handleClick = tempo => {\n      const tempos = [...this.state.tempos]; //Detta är ReactHack no1 som klonar och uppdaterar min state array\n\n      const index = tempos.indexOf(tempo); //Detta definierar vilket object i vår array som har skickats in i metoden\n\n      tempos[index] = { ...tempo\n      }; //Här kopierar vi värdet i definierad index från tempo\n\n      tempos[index].bpm++; //Här ökar vi värdet på vald prop, i detta fallet ++ på bpm\n\n      this.setState({\n        tempos\n      }); //Här uppdaterar vi vårt state och byter ut till den nya arrayen\n\n      console.log(this.state.tempos[index]);\n    };\n\n    this.handleReset = () => {\n      const tempos = this.state.tempos.map(c => {\n        c.bpm = 0;\n        c.resetClicked = true;\n        return c;\n      });\n      this.setState({\n        tempos\n      });\n    };\n\n    this.handleDelete = tempoId => {\n      //Min metod som handerar en reset av ett state\n      console.log(\"event handler called\", tempoId);\n      const currentTempos = this.state.tempos.filter(c => c.id !== tempoId); //Går igenom hela vår array och kollar vilket ID som inte stämmer\n\n      this.setState({\n        tempos: currentTempos\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: /*#__PURE__*/_jsxDEV(NavBar, {\n          combinedTempo: this.state.tempos.filter(c => c.bpm > 40).length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"app-title\",\n          children: \"I am Drum Machine [\\u2510\\u2235]\\u2518\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"En tempo-baserad trummaskin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DrumMachine, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Metronome, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Tempos, {\n          tempos: this.state.tempos,\n          onReset: this.handleReset,\n          onStepClick: this.handleClick,\n          onDelete: this.handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hannespro/Documents/Pro/step-the-beat/src/App.js"],"names":["React","useState","Component","NavBar","Footer","DrumMachine","Metronome","Tempos","App","state","tempos","id","bpm","title","handleClick","tempo","index","indexOf","setState","console","log","handleReset","map","c","resetClicked","handleDelete","tempoId","currentTempos","filter","render","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Component } from 'react';\nimport './App.css';\n\n//components\nimport NavBar from './components/navbar.jsx';\nimport Footer from './components/footer';\nimport DrumMachine from './drumMachine';\nimport Metronome from './Metronome';\nimport Tempos from './components/tempos';\n\n//Detta är min root component!\nclass App extends Component {\n\n  state = { \n    tempos : \n    [\n        { id: 1, bpm: 60, title: 'minute'},\n        { id: 2, bpm: 85, title: 'current bpm'},\n        { id: 3, bpm: 110, title: 'accelerated bpm'},\n        { id: 4, bpm: 128, title: 'target bpm'},\n    ] \n  };\n\n  handleClick = (tempo) => {\n      const tempos = [...this.state.tempos]; //Detta är ReactHack no1 som klonar och uppdaterar min state array\n      const index = tempos.indexOf(tempo); //Detta definierar vilket object i vår array som har skickats in i metoden\n      tempos[index] = {...tempo}; //Här kopierar vi värdet i definierad index från tempo\n      tempos[index].bpm++;    //Här ökar vi värdet på vald prop, i detta fallet ++ på bpm\n      this.setState({ tempos }); //Här uppdaterar vi vårt state och byter ut till den nya arrayen\n      console.log(this.state.tempos[index]);\n  };\n\n  handleReset = () => {\n      const tempos = this.state.tempos.map( c =>{\n          c.bpm = 0;\n          c.resetClicked = true;\n          return c;\n      });\n      this.setState({ tempos });\n  };\n\n  handleDelete = (tempoId) => { //Min metod som handerar en reset av ett state\n      console.log(\"event handler called\", tempoId);\n      const currentTempos = this.state.tempos.filter(c => c.id !== tempoId); //Går igenom hela vår array och kollar vilket ID som inte stämmer\n      this.setState({ tempos : currentTempos });\n  };\n\n  render(){\n    return (\n      <React.Fragment>\n        <header className=\"App-header\">\n          <NavBar combinedTempo={this.state.tempos.filter(c => c.bpm > 40).length}/>\n        </header>\n        <main className='container'>\n        <h1 className=\"app-title\">I am Drum Machine [┐∵]┘</h1>\n            <p>\n              En tempo-baserad trummaskin\n            </p>\n              <DrumMachine/>\n              <Metronome/>\n              <Tempos tempos={this.state.tempos} onReset={this.handleReset} onStepClick={this.handleClick} onDelete={this.handleDelete}/>\n        </main>\n        <Footer/>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}