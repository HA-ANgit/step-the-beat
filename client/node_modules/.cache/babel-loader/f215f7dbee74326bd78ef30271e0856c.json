{"ast":null,"code":"var _jsxFileName = \"/Users/hannespro/Documents/Pro/step-the-beat/src/drumMachine.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport './drumMachine.css';\nimport Kick1 from './808_kit/Kick.wav';\nimport Snare1 from './808_kit/Clap.wav';\nimport Clap1 from './808_kit/Snare.wav';\nimport HHC1 from './808_kit/HH_Closed.wav';\nimport HHO1 from './808_kit/HH_Open.wav';\nimport Perc1 from './808_kit/Perc.wav';\nimport Kick2 from './Pop_kit/Kick.wav';\nimport Snare2 from './Pop_kit/Clap.wav';\nimport Clap2 from './Pop_kit/Snare.wav';\nimport HHC2 from './Pop_kit/HH_Closed.wav';\nimport HHO2 from './Pop_kit/HH_Open.wav';\nimport Perc2 from './Pop_kit/Perc.wav';\n/** Min root-component */\n//Skapa en dynamisk variabel som hämtar data för dessa kit\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst kit808 = [{\n  keyCode: 81,\n  key: 'Q',\n  id: '808-BD',\n  url: Kick1\n}, {\n  keyCode: 87,\n  key: 'W',\n  id: '808-SN',\n  url: Snare1\n}, {\n  keyCode: 69,\n  key: 'E',\n  id: '808-CL',\n  url: Clap1\n}, {\n  keyCode: 65,\n  key: 'A',\n  id: '808-HHC',\n  url: HHC1\n}, {\n  keyCode: 83,\n  key: 'S',\n  id: '808-HHO',\n  url: HHO1\n}, {\n  keyCode: 68,\n  key: 'D',\n  id: '808-PRC',\n  url: Perc1\n}];\nconst popKit = [{\n  keyCode: 81,\n  key: 'Q',\n  id: 'Pop-BD',\n  url: Kick2\n}, {\n  keyCode: 87,\n  key: 'W',\n  id: 'Pop-SN',\n  url: Snare2\n}, {\n  keyCode: 69,\n  key: 'E',\n  id: 'Pop-CL',\n  url: Clap2\n}, {\n  keyCode: 65,\n  key: 'A',\n  id: 'Pop-HHC',\n  url: HHC2\n}, {\n  keyCode: 83,\n  key: 'S',\n  id: 'Pop-HHO',\n  url: HHO2\n}, {\n  keyCode: 68,\n  key: 'D',\n  id: 'Pop-PRC',\n  url: Perc2\n}];\nconst kitName = {\n  kit1: \"808 Kit\",\n  kit2: \"Pop Kit\"\n};\nconst kitGroup = {\n  kit1: kit808,\n  kit2: popKit\n};\n\nconst Triggers = _ref => {\n  _s();\n\n  let {\n    play,\n    deactivateAudio,\n    sample: {\n      id,\n      key,\n      url,\n      keyCode\n    }\n  } = _ref;\n\n  //Trigger hook som låter ljud provspelas med knapptryck\n  const pressKey = event => {\n    if (keyCode === event.keyCode) {\n      const audio = document.getElementById(key);\n      play(key, id);\n      deactivateAudio(audio);\n    }\n  };\n\n  React.useEffect(() => {\n    document.addEventListener(\"keydown\", pressKey);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    value: \"test\",\n    id: keyCode,\n    className: \"drum-pad\",\n    onClick: () => play(key, id),\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      className: \"clip\",\n      id: key,\n      src: url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), key]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Triggers, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Triggers;\n\nconst Keyboard = _ref2 => {\n  let {\n    play,\n    kits,\n    power,\n    deactivateAudio\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"keyboard\",\n    children: power ? kits.map(sample => /*#__PURE__*/_jsxDEV(Triggers, {\n      sample: sample,\n      play: play,\n      deactivateAudio: deactivateAudio\n    }, sample, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 30\n    }, this)) : kits.map(sample => /*#__PURE__*/_jsxDEV(Triggers, {\n      sample: { ...sample,\n        url: \"#\"\n      },\n      play: play,\n      deactivateAudio: deactivateAudio\n    }, sample, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 30\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Keyboard;\n\nconst DrumController = _ref3 => {\n  let {\n    stop,\n    name,\n    power,\n    volume,\n    handleVolumeChange,\n    changeKit\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"controller\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: stop,\n      children: [\"Turn Power \", power ? 'OFF' : 'ON']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Volume: %\", Math.round(volume * 100)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      max: \"1\",\n      min: \"0\",\n      step: \"0.01\",\n      type: \"range\",\n      value: volume,\n      onChange: handleVolumeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"display\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeKit,\n      children: \"Change Sounds Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = DrumController;\n\nconst DrumMachine = () => {\n  _s2();\n\n  const [power, setPower] = React.useState(true);\n  const [volume, setVolume] = React.useState(1);\n  const [soundType, setSoundType] = React.useState(\"kit1\"); //Detta är vårt startkit\n\n  const [soundName, setSoundName] = React.useState(\"\");\n  const [kits, setKit] = React.useState(kitGroup[soundType]);\n\n  const deactivateAudio = audio => {\n    setTimeout(() => {\n      audio.parentElement.style.backgroundColor = \"#ffffff\";\n      audio.parentElement.style.color = \"#000000\";\n    }, 300);\n  };\n\n  const play = (key, sample) => {\n    setSoundName(sample);\n    const audio = document.getElementById(key);\n    audio.currentTime = 0;\n    audio.play();\n    deactivateAudio(audio);\n  };\n\n  const stop = () => {\n    setPower(!power);\n  };\n\n  const changeKit = () => {\n    setSoundName(\"\");\n\n    if (soundType === \"kit1\") {\n      setSoundType(\"kit2\");\n      console.log(\"Changing to Pop-Kit\");\n      setKit(kitGroup.kit2);\n    } else {\n      setSoundType(\"kit1\");\n      console.log(\"Changing to 808-Kit\");\n      setKit(kitGroup.kit1);\n    }\n  };\n\n  const handleVolumeChange = event => {\n    setVolume(event.target.value);\n  };\n\n  const setKeyVolume = () => {\n    const audioes = kits.map(sample => document.getElementById(sample.key)); //kits är en dynamisk variabel som tidigare var hårdkodad\n\n    audioes.forEach(audio => {\n      if (audio) {\n        audio.volume = volume;\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"drum_machine\",\n    id: \"drum_machine\",\n    children: [setKeyVolume(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Keyboard, {\n        play: play,\n        kits: kits,\n        power: power,\n        deactivateAudio: deactivateAudio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DrumController, {\n        stop: stop,\n        power: power,\n        volume: volume,\n        handleVolumeChange: handleVolumeChange,\n        changeKit: changeKit,\n        name: soundName || kitName[soundType]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(DrumMachine, \"DaBBftzu7lT6JIy8csCWTC7K31A=\");\n\n_c4 = DrumMachine;\nexport default DrumMachine;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Triggers\");\n$RefreshReg$(_c2, \"Keyboard\");\n$RefreshReg$(_c3, \"DrumController\");\n$RefreshReg$(_c4, \"DrumMachine\");","map":{"version":3,"sources":["/Users/hannespro/Documents/Pro/step-the-beat/src/drumMachine.js"],"names":["React","Kick1","Snare1","Clap1","HHC1","HHO1","Perc1","Kick2","Snare2","Clap2","HHC2","HHO2","Perc2","kit808","keyCode","key","id","url","popKit","kitName","kit1","kit2","kitGroup","Triggers","play","deactivateAudio","sample","pressKey","event","audio","document","getElementById","useEffect","addEventListener","Keyboard","kits","power","map","DrumController","stop","name","volume","handleVolumeChange","changeKit","Math","round","DrumMachine","setPower","useState","setVolume","soundType","setSoundType","soundName","setSoundName","setKit","setTimeout","parentElement","style","backgroundColor","color","currentTime","console","log","target","value","setKeyVolume","audioes","forEach"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport './drumMachine.css';\n\nimport Kick1 from './808_kit/Kick.wav';\nimport Snare1 from './808_kit/Clap.wav';\nimport Clap1 from './808_kit/Snare.wav';\nimport HHC1 from './808_kit/HH_Closed.wav';\nimport HHO1 from './808_kit/HH_Open.wav';\nimport Perc1 from './808_kit/Perc.wav';\nimport Kick2 from './Pop_kit/Kick.wav';\nimport Snare2 from './Pop_kit/Clap.wav';\nimport Clap2 from './Pop_kit/Snare.wav';\nimport HHC2 from './Pop_kit/HH_Closed.wav';\nimport HHO2 from './Pop_kit/HH_Open.wav';\nimport Perc2 from './Pop_kit/Perc.wav'; \n\n/** Min root-component */\n\n//Skapa en dynamisk variabel som hämtar data för dessa kit\nconst kit808 = [\n    {\n        keyCode: 81,\n        key: 'Q',\n        id: '808-BD',\n        url: Kick1\n    },\n    {\n        keyCode: 87,\n        key: 'W',\n        id: '808-SN',\n        url: Snare1\n    },\n    {\n        keyCode: 69,\n        key: 'E',\n        id: '808-CL',\n        url: Clap1\n    },\n    {\n        keyCode: 65,\n        key: 'A',\n        id: '808-HHC',\n        url: HHC1\n    },\n    {\n        keyCode: 83,\n        key: 'S',\n        id: '808-HHO',\n        url: HHO1\n    },\n    {\n        keyCode: 68,\n        key: 'D',\n        id: '808-PRC',\n        url: Perc1\n    }\n];\n\nconst popKit = [\n    {\n        keyCode: 81,\n        key: 'Q',\n        id: 'Pop-BD',\n        url: Kick2\n    },\n    {\n        keyCode: 87,\n        key: 'W',\n        id: 'Pop-SN',\n        url: Snare2\n    },\n    {\n        keyCode: 69,\n        key: 'E',\n        id: 'Pop-CL',\n        url: Clap2\n    },\n    {\n        keyCode: 65,\n        key: 'A',\n        id: 'Pop-HHC',\n        url: HHC2\n    },\n    {\n        keyCode: 83,\n        key: 'S',\n        id: 'Pop-HHO',\n        url: HHO2\n    },\n    {\n        keyCode: 68,\n        key: 'D',\n        id: 'Pop-PRC',\n        url: Perc2\n    }\n];\n\nconst kitName = {\n    kit1: \"808 Kit\",\n    kit2: \"Pop Kit\"\n};\n\nconst kitGroup = {\n    kit1: kit808,\n    kit2: popKit\n}\n\nconst Triggers = ({ play, deactivateAudio, sample: { id, key, url, keyCode } }) => { //Trigger hook som låter ljud provspelas med knapptryck\n\n    const pressKey = (event) => {\n        if(keyCode === event.keyCode){\n            const audio = document.getElementById(key);\n            play(key, id);\n            deactivateAudio(audio)\n        }\n    }\n\n    React.useEffect(() => { \n        document.addEventListener(\"keydown\", pressKey)\n    }, [])\n\n    return (\n        <button value=\"test\" id={keyCode} className=\"drum-pad\" onClick={() => play(key, id)}> \n            <audio className=\"clip\" id={key} src={url} />\n            {key}\n        </button>\n    );\n}\n\nconst Keyboard = ({ play, kits, power, deactivateAudio }) => (\n    <div className=\"keyboard\">\n    {power \n      ? kits.map((sample) => <Triggers key={sample} sample={sample} play={play} deactivateAudio={deactivateAudio} />)\n      : kits.map((sample) => <Triggers key={sample} sample={{...sample, url: \"#\" }} play={play} deactivateAudio={deactivateAudio} />)        \n    }\n  </div>\n);\n\nconst DrumController = ({ stop, name, power, volume, handleVolumeChange, changeKit }) => (\n    <div className=\"controller\">\n      <button onClick={stop}>Turn Power {power ? 'OFF' : 'ON'}</button>\n      <h2>Volume: %{Math.round(volume * 100)}</h2>\n      <input\n        max=\"1\"\n        min=\"0\"\n        step='0.01'\n        type=\"range\"\n        value={volume}\n        onChange={handleVolumeChange}\n        />\n      <h2 id=\"display\" >{name}</h2>\n      <button onClick={changeKit}>Change Sounds Group</button>\n    </div>\n  );\n  \nconst DrumMachine = () => {\n    const [power, setPower] = React.useState(true);\n    const [volume, setVolume] = React.useState(1);\n    const [soundType, setSoundType] = React.useState(\"kit1\"); //Detta är vårt startkit\n    const [soundName, setSoundName] = React.useState(\"\");\n    const [kits, setKit] = React.useState(kitGroup[soundType])  \n\n    const deactivateAudio = (audio) => {\n        setTimeout(() => {\n          audio.parentElement.style.backgroundColor = \"#ffffff\"\n          audio.parentElement.style.color = \"#000000\"\n        }, 300)\n      }\n\n    const play = (key, sample) => {\n        setSoundName(sample)\n        const audio = document.getElementById(key)\n        audio.currentTime = 0;\n        audio.play()\n        deactivateAudio(audio)\n    }\n\n    const stop = () => {\n        setPower(!power)\n     }\n\n    const changeKit = () => {\n        setSoundName(\"\")\n        if(soundType === \"kit1\"){\n            setSoundType(\"kit2\")\n            console.log(\"Changing to Pop-Kit\") \n            setKit(kitGroup.kit2)\n        } else {\n            setSoundType(\"kit1\")\n            console.log(\"Changing to 808-Kit\")\n            setKit(kitGroup.kit1)\n        }\n    }\n\n    const handleVolumeChange = event => {\n        setVolume(event.target.value)\n    }\n\n    const setKeyVolume = () => {\n        const audioes = kits.map(sample => document.getElementById(sample.key)); //kits är en dynamisk variabel som tidigare var hårdkodad\n        audioes.forEach(audio => {\n          if(audio) {\n            audio.volume = volume;\n          }\n        }) \n      }\n\n    return (\n        <div className=\"drum_machine\" id=\"drum_machine\"> \n            {setKeyVolume()}\n            <div className=\"wrapper\">\n                <Keyboard play={play} kits={kits} power={power} deactivateAudio={deactivateAudio} \n/> \n                <DrumController \n                stop={stop}\n                power={power}\n                volume={volume}\n                handleVolumeChange={handleVolumeChange} \n                changeKit={changeKit} \n                name={soundName || kitName[soundType]} />\n            </div>\n        </div>\n  )\n};\n\nexport default DrumMachine;"]},"metadata":{},"sourceType":"module"}