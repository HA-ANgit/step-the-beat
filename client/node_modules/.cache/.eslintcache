[{"/Users/hannespro/Documents/Pro/step-the-beat/client/src/index.js":"1","/Users/hannespro/Documents/Pro/step-the-beat/client/src/App.js":"2","/Users/hannespro/Documents/Pro/step-the-beat/client/src/reportWebVitals.js":"3","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/Main.jsx":"4","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/CreateUserPage.jsx":"5","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/LogInPage.jsx":"6","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/About.jsx":"7","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/NotFoundPage.jsx":"8","/Users/hannespro/Documents/Pro/step-the-beat/client/src/drumMachine.js":"9","/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/navbar.jsx":"10","/Users/hannespro/Documents/Pro/step-the-beat/client/src/Metronome.js":"11","/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/footer.jsx":"12","/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/tempos.jsx":"13","/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/counter.jsx":"14","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/Admin.jsx":"15","/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/loginForm.jsx":"16","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/Dashboard.jsx":"17"},{"size":256,"mtime":1652918758898,"results":"18","hashOfConfig":"19"},{"size":1372,"mtime":1652958387470,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1652886185582,"results":"21","hashOfConfig":"19"},{"size":3153,"mtime":1652965994583,"results":"22","hashOfConfig":"19"},{"size":4211,"mtime":1652954871595,"results":"23","hashOfConfig":"19"},{"size":846,"mtime":1652923468529,"results":"24","hashOfConfig":"19"},{"size":543,"mtime":1652886181728,"results":"25","hashOfConfig":"19"},{"size":436,"mtime":1652886181729,"results":"26","hashOfConfig":"19"},{"size":5642,"mtime":1652886185583,"results":"27","hashOfConfig":"19"},{"size":1848,"mtime":1652886879412,"results":"28","hashOfConfig":"19"},{"size":2800,"mtime":1653007227498,"results":"29","hashOfConfig":"19"},{"size":1340,"mtime":1652886181726,"results":"30","hashOfConfig":"19"},{"size":735,"mtime":1652886181727,"results":"31","hashOfConfig":"19"},{"size":2690,"mtime":1652886181725,"results":"32","hashOfConfig":"19"},{"size":2697,"mtime":1652965742681,"results":"33","hashOfConfig":"19"},{"size":2006,"mtime":1652958440658,"results":"34","hashOfConfig":"19"},{"size":1948,"mtime":1652957566433,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1mmmox5",{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"39"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"39"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"39"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hannespro/Documents/Pro/step-the-beat/client/src/index.js",[],[],["96","97"],"/Users/hannespro/Documents/Pro/step-the-beat/client/src/App.js",["98","99"],[],"import React, { useState } from 'react';\n\nimport { BrowserRouter, Routes, Route, Link, Navigate } from \"react-router-dom\";\n\n//components\nimport { Component } from 'react';\n\n//pages\nimport Main from './pages/Main';\nimport NotFoundPage from './pages/NotFoundPage';\nimport LogInPage from './pages/LogInPage';\nimport CreateUserPage from \"./pages/CreateUserPage\";\nimport About from './pages/About';\nimport Admin from './pages/Admin';\n//import Dashboard from './pages/Dashboard';\n\n\nclass App extends Component {\n    render() {\n        const account = localStorage.getItem(\"token\");\n        return (\n            <BrowserRouter>\n                <Routes>\n                    {account && <Route exact path=\"/\" element={<Main/>} />}\n                    <Route exact path=\"/404\" element={<NotFoundPage activeBPM={false}/>} />\n                    <Route exact path=\"/LogIn\" element={<LogInPage/>} />\n                    <Route exact path=\"/CreateUser\" element={<CreateUserPage/>} />\n                    <Route exact path='/About' element={<About/>} />\n                    <Route exact path='/Admin' element={<Admin/>} />\n                    {/* <Route exact path='/Dashboard' element={<Dashboard/>} /> */}\n                    <Route path=\"/\" exact element={<Navigate replace to=\"/login\"/>}/>\n                </Routes>\n            </BrowserRouter>\n        );\n    }\n} export default App;","/Users/hannespro/Documents/Pro/step-the-beat/client/src/reportWebVitals.js",[],[],"/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/Main.jsx",["100"],[],"import React, { useState } from 'react';\nimport { Component } from 'react';\nimport '/Users/hannespro/Documents/Pro/step-the-beat/client/src/App.css';\n\n//components\nimport NavBar from '../components/navbar.jsx';\nimport Footer from '../components/footer';\nimport DrumMachine from '../drumMachine';\nimport Metronome from '../Metronome';\nimport Tempos from '../components/tempos';\n\n//Detta är min root component!\nclass Main extends Component {\n\n  state = { \n    tempos : //tempos ligger som en state\n    [\n        { id: 1, bpm: 60, title: 'minute'},\n        { id: 2, bpm: 85, title: 'current bpm'},\n        { id: 3, bpm: 110, title: 'accelerated bpm'},\n        { id: 4, bpm: 128, title: 'target bpm'},\n    ] \n  };\n\n  constructor (props) {        //Test - Reacthook mount - Constructorn äre rätt ställe att inita props i klassen, denna kallas en gång\n    super(props);\n    console.log(\"Main - Constructor\", this.props);\n    //this.state = this.props.something;\n  }\n\n  componentDidMount() { //Test - Lifecyckle hook Mount\n    //Ajax call till ex en server\n    console.log(\"Main - Monted\");\n    //this.setState({ tempos })\n  }\n\n  handleClick = (tempo) => {\n      const tempos = [...this.state.tempos]; //Detta är ReactHack no1 som klonar och uppdaterar min state array\n      const index = tempos.indexOf(tempo); //Detta definierar vilket object i vår array som har skickats in i metoden\n      tempos[index] = {...tempo}; //Här kopierar vi värdet i definierad index från tempo\n      tempos[index].bpm++;    //Här ökar vi värdet på vald prop, i detta fallet ++ på bpm\n      this.setState({ tempos }); //Här uppdaterar vi vårt state och byter ut till den nya arrayen\n      console.log(this.state.tempos[index]);\n  };\n\n  handleReset = () => {\n      const tempos = this.state.tempos.map( c =>{\n          c.bpm = 0;\n          c.resetClicked = true;\n          return c;\n      });\n      this.setState({ tempos });\n  };\n\n  handleDelete = (tempoId) => { //Min metod som handerar en reset av ett state\n      console.log(\"event handler called\", tempoId);\n      const currentTempos = this.state.tempos.filter(c => c.id !== tempoId); //Går igenom hela vår array och kollar vilket ID som inte stämmer\n      this.setState({ tempos : currentTempos });\n  };\n\n  render(){\n    console.log(\"Main - rendered\");\n\n    return (\n      <div className='container'>\n        <header className=\"App-header\">\n          <NavBar activeBPM={this.state.tempos.filter(c => c.bpm > 40).length}/>\n        </header>\n        <main className='container'>\n          <h1 className=\"App-title\">I am Drum Machine [┐∵]┘</h1>\n            <p>\n              A tempo-based drum machine thats {this.handleReset.resetClicked ? 'Enabled' : 'Offline'} {/* If-loop som kikar på state och är dynamisk */}\n            </p>\n              <DrumMachine/>\n              <Metronome targetBPM=\"Här kommer BPMprops styra vår Metronom som i slutändan blir våran sequencer\"/>\n              <Tempos tempos={this.state.tempos} onReset={this.handleReset} onStepClick={this.handleClick} onDelete={this.handleDelete}/>\n        </main>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default Main;","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/CreateUserPage.jsx",["101"],[],"import React, {useState} from 'react';\nimport {Link, useNavigate} from 'react-router-dom';\nimport NavBar from '../components/navbar.jsx';\nimport Axios from 'axios'; //TODO Fick aldrig Axios att funka\n\nconst CreateUserPage = () => {\n    \n    const [uname, setUname] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\n    const [error, setError] = useState();\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => { //Denna metod retunerar vårt objekt\n\t\te.preventDefault();\n\n        if (!uname) {   //Denna validerar data i state\n            alert ('please add username')\n            return\n        } else if (!email) {\n            alert ('please add email')\n            return\n        } else if (!password) {\n            alert ('please add password')\n            return\n        } \n\n        const response = await fetch('http://localhost:3001/api/register', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\tuname,\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json()\n\n        console.log(data.Status)\n\n\t\tif (data.Status === 'OK') {\n\t\t\tnavigate('/login')\n\t\t} else {\n            alert ('This Account already exists!')\n            setError(error)\n        }\n\t};\n\n        /*Efter \"create user\"-metoden, setState / reset av form\n            setDetails('')\n            setEmail('')\n            setPassword('')\n    }*/\n\n    /* const onSubmit = async (e) => {   //Denna hanterar vår onSubmit och validerar samt kallar på vår createUser\n        if (!details.uname) {\n            alert ('please add username')\n            return\n        } else if (!details.email) {\n            alert ('please add email')\n            return\n        } else if (!details.password) {\n            alert ('please add password')\n            return\n        } \n        createUser ({ details })\n    } */\n    \n    return (\n        <div> \n            <header className=\"App-header\">\n                <NavBar/>\n            </header>\n            <section className=\"createUser\">\n                <div className='container'>\n                    <p>Allready got an account?</p>\n                <Link to=\"/login\">\n\t\t\t\t\t<button type=\"button\">\n\t\t\t\t\t\tSing In\n\t\t\t\t\t</button>\n\t\t\t\t</Link>\n                </div>\n                <div className=\"form-box\">\n                <form onSubmit={handleSubmit}>\n\t\t\t\t\t\t<h2>Create Account</h2>\n                        <label htmlFor=\"username\" className=\"uname\">\n                            <p>User Name:</p>\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Type in your Username\"\n                                    name=\"uname\"\n                                    onChange={(e) => setUname(e.target.value)}\n                                    value={uname}\n                                />\n                         </label>\n                         <label htmlFor=\"email\" className=\"form-input\">\n                            <p>E-mail:</p>\n                            <input\n                                type=\"email\"\n                                placeholder=\"Type in prefered@email.com\"\n                                name=\"email\"\n                                onChange={(e) => setEmail(e.target.value)}\n                                value={email}\n                            />\n                        </label>\n                        <label htmlFor=\"password\" className=\"form-input\">\n                            <p>Password:</p>\n                            <input\n                                type=\"password\"\n                                placeholder=\"Type in a Password\"\n                                name=\"password\"\n                                onChange={(e) => setPassword(e.target.value)}\n                                value={password}\n                            />\n                        </label>\n                        <br/><br/>\n\t\t\t\t\t\t{error && <div>{error}</div>}\n\t\t\t\t\t\t<button type=\"submit\" value=\"Register\">Sing Up</button>\n\t\t\t\t\t</form>\n                </div>\n            </section>\n        </div>\n    );\n};\n\nexport default CreateUserPage;","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/LogInPage.jsx",["102"],[],"import React from \"react\";\nimport NavBar from \"../components/navbar\";\nimport { Link } from 'react-router-dom';\nimport LoginForm from \"../components/loginForm\";\n\nconst LogIn = () => {\n    return (\n        <div>\n            <header className=\"App-header\">\n                <NavBar/>\n            </header>\n\n            <div className=\"container\">\n                <LoginForm/>\n                <div className=\"text-block\">\n\n                    <h4 className=\"no-account\">Need to create a new account?</h4>\n\n                    <div className=\"create-account-button\">\n                        <a href=\"/CreateUser\" className=\"button-text\">Create Account</a>\n                        <p className={\"forgot-password\"}>Forgot password?</p>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    );\n};\n\nexport default LogIn;","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/About.jsx",[],[],"/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/NotFoundPage.jsx",[],[],"/Users/hannespro/Documents/Pro/step-the-beat/client/src/drumMachine.js",["103"],[],"import React from \"react\";\nimport './drumMachine.css';\n\nimport Kick1 from './808_kit/Kick.wav';\nimport Snare1 from './808_kit/Clap.wav';\nimport Clap1 from './808_kit/Snare.wav';\nimport HHC1 from './808_kit/HH_Closed.wav';\nimport HHO1 from './808_kit/HH_Open.wav';\nimport Perc1 from './808_kit/Perc.wav';\nimport Kick2 from './Pop_kit/Kick.wav';\nimport Snare2 from './Pop_kit/Clap.wav';\nimport Clap2 from './Pop_kit/Snare.wav';\nimport HHC2 from './Pop_kit/HH_Closed.wav';\nimport HHO2 from './Pop_kit/HH_Open.wav';\nimport Perc2 from './Pop_kit/Perc.wav'; \n\n/** Min root-component */\n\n//Skapa en dynamisk variabel som hämtar data för dessa kit\nconst kit808 = [\n    {\n        keyCode: 81,\n        key: 'Q',\n        id: '808-BD',\n        url: Kick1\n    },\n    {\n        keyCode: 87,\n        key: 'W',\n        id: '808-SN',\n        url: Snare1\n    },\n    {\n        keyCode: 69,\n        key: 'E',\n        id: '808-CL',\n        url: Clap1\n    },\n    {\n        keyCode: 65,\n        key: 'A',\n        id: '808-HHC',\n        url: HHC1\n    },\n    {\n        keyCode: 83,\n        key: 'S',\n        id: '808-HHO',\n        url: HHO1\n    },\n    {\n        keyCode: 68,\n        key: 'D',\n        id: '808-PRC',\n        url: Perc1\n    }\n];\n\nconst popKit = [\n    {\n        keyCode: 81,\n        key: 'Q',\n        id: 'Pop-BD',\n        url: Kick2\n    },\n    {\n        keyCode: 87,\n        key: 'W',\n        id: 'Pop-SN',\n        url: Snare2\n    },\n    {\n        keyCode: 69,\n        key: 'E',\n        id: 'Pop-CL',\n        url: Clap2\n    },\n    {\n        keyCode: 65,\n        key: 'A',\n        id: 'Pop-HHC',\n        url: HHC2\n    },\n    {\n        keyCode: 83,\n        key: 'S',\n        id: 'Pop-HHO',\n        url: HHO2\n    },\n    {\n        keyCode: 68,\n        key: 'D',\n        id: 'Pop-PRC',\n        url: Perc2\n    }\n];\n\nconst kitName = {\n    kit1: \"808 Kit\",\n    kit2: \"Pop Kit\"\n};\n\nconst kitGroup = {\n    kit1: kit808,\n    kit2: popKit\n}\n//Trigger hook som låter ljud provspelas med knapptryck\nconst Triggers = ({ play, deactivateAudio, sample: { id, key, url, keyCode } }) => { //props destructing\n\n    const pressKey = (event) => {\n        if(keyCode === event.keyCode){\n            const audio = document.getElementById(key);\n            play(key, id);\n            deactivateAudio(audio)\n        }\n    }\n\n    React.useEffect(() => { \n        document.addEventListener(\"keydown\", pressKey)\n    }, [])\n\n    return (\n        <button value=\"test\" id={keyCode} className=\"drum-pad\" onClick={() => play(key, id)}> \n            <audio className=\"clip\" id={key} src={url} />\n            {key}\n        </button>\n    );\n}\n\nconst Keyboard = ({ play, kits, power, deactivateAudio }) => (\n    <div className=\"keyboard\">\n    {power \n      ? kits.map((sample) => <Triggers key={sample.id} sample={sample} play={play} deactivateAudio={deactivateAudio} />)\n      : kits.map((sample) => <Triggers sample={{...sample, url: \"#\" }} play={play} deactivateAudio={deactivateAudio} />)        \n    }\n  </div>\n);\n\nconst DrumController = ({ stop, name, power, volume, handleVolumeChange, changeKit }) => (\n    <div className=\"controller\">\n      <button onClick={stop}>Turn Power {power ? 'OFF' : 'ON'}</button>\n      <h2>Volume: %{Math.round(volume * 100)}</h2>\n      <input\n        max=\"1\"\n        min=\"0\"\n        step='0.01'\n        type=\"range\"\n        value={volume}\n        onChange={handleVolumeChange}\n        />\n      <h2 id=\"display\" >{name}</h2>\n      <button onClick={changeKit}>Change Sounds Group</button>\n    </div>\n  );\n  \nconst DrumMachine = () => {\n    const [power, setPower] = React.useState(true);\n    const [volume, setVolume] = React.useState(1);\n    const [soundType, setSoundType] = React.useState(\"kit1\"); //Detta är vårt startkit\n    const [soundName, setSoundName] = React.useState(\"\");\n    const [kits, setKit] = React.useState(kitGroup[soundType])  \n\n    const deactivateAudio = (audio) => {\n        setTimeout(() => {\n          audio.parentElement.style.backgroundColor = \"#ffffff\"\n          audio.parentElement.style.color = \"#000000\"\n        }, 300)\n      }\n\n    const play = (key, sample) => {\n        setSoundName(sample)\n        const audio = document.getElementById(key)\n        audio.currentTime = 0;\n        audio.play()\n        deactivateAudio(audio)\n    }\n\n    const stop = () => {\n        setPower(!power)\n     }\n\n    const changeKit = () => {\n        setSoundName(\"\")\n        if(soundType === \"kit1\"){\n            setSoundType(\"kit2\")\n            console.log(\"Changing to Pop-Kit\") \n            setKit(kitGroup.kit2)\n        } else {\n            setSoundType(\"kit1\")\n            console.log(\"Changing to 808-Kit\")\n            setKit(kitGroup.kit1)\n        }\n    }\n\n    const handleVolumeChange = event => {\n        setVolume(event.target.value)\n    }\n\n    const setKeyVolume = () => {\n        const audioes = kits.map(sample => document.getElementById(sample.key)); //kits är en dynamisk variabel som tidigare var hårdkodad\n        audioes.forEach(audio => {\n          if(audio) {\n            audio.volume = volume;\n          }\n        }) \n      }\n\n    return (\n        <div className=\"drum_machine\" id=\"drum_machine\"> \n            {setKeyVolume()}\n            <div className=\"wrapper\">\n                <Keyboard play={play} kits={kits} power={power} deactivateAudio={deactivateAudio} \n/> \n                <DrumController \n                stop={stop}\n                power={power}\n                volume={volume}\n                handleVolumeChange={handleVolumeChange} \n                changeKit={changeKit} \n                name={soundName || kitName[soundType]} />\n            </div>\n        </div>\n  )\n};\n\nexport default DrumMachine;","/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/navbar.jsx",["104"],[],"import React, { Component } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\n\n//Är vår component ej i behov av states så använder vi function med return(); istället för ett definiera en klass\n//I function-komponenter så måste vi mappa in props som ett värde för att kunna använda dessa i komponenten. Skippa även att ha .this i denna typ av component.\n\nfunction NavBar(props) {\n    console.log(\"NavBar - rendered\");\n    const location = useLocation();\n\n    const handleLogout = () => {\n\t\tlocalStorage.removeItem(\"token\");\n\t\twindow.location.reload();\n\t};\n\n    return (\n        <main>\n            <div className='navbar'>\n                <div className='container'>\n                    <div className={\"logo\"}>\n                            <Link to=\"/\" cursor=\"pointer\">\n                                <img src={\"./images/logo.png\"} alt=\"beatstep\" width=\"100%\" height=\"100%\"/>\n                            </Link>\n                            <img src='./logo512.png' className=\"App-logo\" alt=\"logo\" />\n                    </div>\n                </div>\n                <nav>\n                    <ul className=\"primary-nav\">\n                        <li><Link to=\"/CreateUser\" className=\"laptop-as mobile-as\">CREATE ACCOUNT</Link></li>\n                        <li><Link to=\"/LogIn\" className={\"laptop-as mobile-as\"}>LOG IN</Link></li>\n                        <li className={\"laptop-links mobile-links\"}><Link to=\"/About\">ABOUT US</Link></li>\n                        <li onClick={handleLogout}>Logout</li>\n                    </ul>\n                    {location.pathname==='/' && //Detta gör att vi enbart visar aktiva bpm under Main-endpointen\n                        <span>Active: {props.activeBPM}</span>\n                    }\n                </nav>\n            </div>  \n        </main>\n    );\n}\n \nexport default NavBar;","/Users/hannespro/Documents/Pro/step-the-beat/client/src/Metronome.js",[],[],"/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/footer.jsx",[],[],"/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/tempos.jsx",[],[],"/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/counter.jsx",[],[],"/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/Admin.jsx",["105"],[],"import React, {useState, useEffect} from 'react';\nimport { Link } from 'react-router-dom';\nimport Axios from 'axios';\n\nconst Admin = () => {\n\n    const [accountList, setAccoutList] = useState([]);\n    const [uname, setAccountName] = useState('');\n\n    useEffect(()=> {\n        Axios.get(\"http://localhost:3001/api/read\").then((response)=>{\n            console.log(\"response.data: \" + response.data)\n\n            setAccoutList(response.data)\n            console.log(\"accountList: \" + accountList)\n        });\n    }, []);\n\n    const updateAccount = (id) => {\n        Axios.put(\"http://localhost:3001/api/update\", {id: id, uname: uname}).then((response)=>{\n            console.log(response.data);\n            console.log(\"id.data: \" + id + \" uname: \" + uname);\n\n            setAccountName(response.data)\n        });\n    };\n\n    const deleteAccount = (id) => {\n        Axios.delete(`http://localhost:3001/api/delete/${id}`)\n        console.log(\"id.data: \" + id);\n    };\n\n    const findUser = (id)=> {\n        Axios.get(`http://localhost:3001/api/read/${id}`)\n        .then(({data}) => {\n          console.log(\"DATA ==> \", data)\n        })\n        .catch(error => console.log(\"ERROR API GET ==> \", error))\n      }\n\n    return (\n        <div className='container'>\n            <header className=\"App-header\">\n                <h2>Admin Dashboard</h2>\n            </header>\n            <main className='container'>\n            <h4>User Data: </h4>\n                <div className='container'>\n                    <input onChange={(e) => {findUser(e.target.value)}} type=\"text\" placeholder=\"Search by username...\"/>\n                    <button style={ {   padding: 1 }} type=\"submit\">Search User</button>\n                    <br/><br/>\n                </div>\n                <div className='admin-container'>\n                    {accountList.map((value, key) => {\n                        return <div key={key} className=\"account\"><h5>{\"User: \" + value.uname + \" | Email: \" + value.email + \" | ID: \" + value._id}</h5>\n                        <input type=\"text\" placeholder='New Username...' onChange={(e) => {setAccountName(e.target.value)}} />\n                        <button onClick={() => updateAccount(value._id)} style={ {   padding: 1 }}>UPDATE USERNAME</button>\n                        <button>RESET PASSWORD</button>\n                        <button onClick={() => deleteAccount(value._id)} style={ { color : 'red' } }>DELETE ACCOUNT</button>\n                        </div>\n                    })}\n                </div>\n                <div className='container'>\n                    <Link to='/'>Go Back</Link>\n                </div>\n            </main>\n        </div>\n    )\n};\nexport default Admin;","/Users/hannespro/Documents/Pro/step-the-beat/client/src/components/loginForm.jsx",["106","107"],[],"import React, { useState } from 'react';\nimport axios from \"axios\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction LoginForm({ Login }) {\n    const [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n    const [error, setError] = useState(\"\");\n    const navigate = useNavigate();\n\n\n    const submitHandler = async (e) => {\n        e.preventDefault();\n        const response = await fetch('http://localhost:3001/api/login', {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify({\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t}),\n\t\t})\n\n\t\tconst data = await response.json()\n\n        console.log(data.User)\n\n\t\tif (data.User) {\n\t\t\tlocalStorage.setItem('token', data.User)        //Vi lagrar lokal token för Auth\n\t\t\talert('Login successful')\n\t\t\tnavigate(\"/\");\n\t\t} else {\n\t\t\talert('Please check your username and password')\n\t\t}\n    }\n\n    return (\n        <form onSubmit={submitHandler}>\n            <div className=\"form-inner\">\n                <h2>Login</h2>\n                {/* ERROR! */}\n                <div className=\"form-grupp\">\n                    <label htmlFor=\"name\">Email:</label>\n                    <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"Email\" />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"password\">Password:</label>\n                    <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"Password\" />\n                </div>\n                        <div className={\"checkbox-password-wrap\"}>\n                        <input type=\"checkbox\" id=\"keep-signed\" name=\"signed-in\" value=\"sign-in\"/>\n                        <label htmlFor=\"keep-signed\">Keep me signed in</label>\n                        </div>\n                <input type=\"submit\" value=\"Login\" />\n            </div>\n            {error && <div>{error}</div>}\n        </form>\n    )\n}\n\nexport default LoginForm","/Users/hannespro/Documents/Pro/step-the-beat/client/src/pages/Dashboard.jsx",["108"],[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"117","line":3,"column":40,"nodeType":"115","messageId":"116","endLine":3,"endColumn":44},{"ruleId":"113","severity":1,"message":"114","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":25},{"ruleId":"113","severity":1,"message":"118","line":4,"column":8,"nodeType":"115","messageId":"116","endLine":4,"endColumn":13},{"ruleId":"113","severity":1,"message":"117","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":120,"column":8,"nodeType":"121","endLine":120,"endColumn":10,"suggestions":"122"},{"ruleId":"113","severity":1,"message":"123","line":1,"column":17,"nodeType":"115","messageId":"116","endLine":1,"endColumn":26},{"ruleId":"119","severity":1,"message":"124","line":17,"column":8,"nodeType":"121","endLine":17,"endColumn":10,"suggestions":"125"},{"ruleId":"113","severity":1,"message":"126","line":2,"column":8,"nodeType":"115","messageId":"116","endLine":2,"endColumn":13},{"ruleId":"113","severity":1,"message":"127","line":8,"column":19,"nodeType":"115","messageId":"116","endLine":8,"endColumn":27},{"ruleId":"113","severity":1,"message":"128","line":7,"column":8,"nodeType":"115","messageId":"116","endLine":7,"endColumn":16},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'pressKey'. Either include it or remove the dependency array.","ArrayExpression",["131"],"'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'accountList'. Either include it or remove the dependency array.",["132"],"'axios' is defined but never used.","'setError' is assigned a value but never used.","'navigate' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},"Update the dependencies array to be: [pressKey]",{"range":"137","text":"138"},"Update the dependencies array to be: [accountList]",{"range":"139","text":"140"},[2380,2382],"[pressKey]",[515,517],"[accountList]"]